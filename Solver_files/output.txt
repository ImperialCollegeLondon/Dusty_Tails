Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 19.45      3.08     3.08 39934296     0.00     0.00  rad_pressure(std::vector<double, std::allocator<double> >)
 14.65      5.40     2.32 39934296     0.00     0.00  acceleration(int, double, double, std::vector<double, std::allocator<double> >)
 12.31      7.35     1.95 79868592     0.00     0.00  opacity(double, double, double, double)
 10.55      9.02     1.67 119802888     0.00     0.00  sunit_vector(std::vector<double, std::allocator<double> >)
  7.39     10.19     1.17 159737184     0.00     0.00  cross_product(double, double, double, double, double, double)
  7.39     11.36     1.17  2139972     0.00     0.01  k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&)
  5.75     12.27     0.91 40631868     0.00     0.00  pr_drag(std::vector<double, std::allocator<double> >)
  3.66     12.85     0.58 119802888     0.00     0.00  dot_product(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >)
  3.54     13.41     0.56 39934296     0.00     0.00  centrifugal(std::vector<double, std::allocator<double> >)
  3.28     13.93     0.52 625637304     0.00     0.00  scalar(double, double, double)
  2.34     14.30     0.37 39934296     0.00     0.00  drag_vel(std::vector<double, std::allocator<double> >)
  1.39     14.52     0.22 13311432     0.00     0.00  clausius_clap(double, double, double, double)
  1.39     14.74     0.22 39934296     0.00     0.00  coriolis(std::vector<double, std::allocator<double> >)
  1.14     14.92     0.18                             std::vector<Particle, std::allocator<Particle> >::~vector()
  1.14     15.10     0.18  2101572     0.00     0.01  new_variables(double, std::vector<double, std::allocator<double> >, bool)
  1.01     15.26     0.16 79868592     0.00     0.00  beta_fn(double, double, double)
  0.63     15.36     0.10 93180024     0.00     0.00  luminosity(double)
  0.63     15.46     0.10 13311432     0.00     0.00  temp_dust(double, double, double, double, double)
  0.57     15.55     0.09 79868592     0.00     0.00  omega(double, double)
  0.44     15.62     0.07 13311432     0.00     0.00  sublimation(double, double, double, double)
  0.44     15.69     0.07                             radial_vel(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >)
  0.38     15.75     0.06   702000     0.00     0.01  error_max(double, std::vector<double, std::allocator<double> >)
  0.13     15.77     0.02   697572     0.00     0.00  new_step_size(double, double, int, std::vector<double, std::allocator<double> >)
  0.13     15.79     0.02   697572     0.00     0.01  next_step(double, std::vector<double, std::allocator<double> >)
  0.13     15.81     0.02    17300     0.00     0.88  RK_solver(std::vector<double, std::allocator<double> >, double, double, double)
  0.13     15.83     0.02     1800     0.01     0.01  to_spherical(double, double, double)
  0.06     15.84     0.01     1800     0.01     0.01  grid_scaling(std::vector<double, std::allocator<double> >)
  0.00     15.84     0.00    19200     0.00     0.00  dust_mass(double)
  0.00     15.84     0.00    17300     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_realloc_insert<double const&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)
  0.00     15.84     0.00     9652     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.00     15.84     0.00     3750     0.00     0.00  phi_reverse(double)
  0.00     15.84     0.00     3750     0.00     0.00  theta_reverse(double)
  0.00     15.84     0.00       18     0.00     1.50  add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double)
  0.00     15.84     0.00       12     0.00     0.00  void std::vector<Particle, std::allocator<Particle> >::_M_realloc_insert<Particle const&>(__gnu_cxx::__normal_iterator<Particle*, std::vector<Particle, std::allocator<Particle> > >, Particle const&)
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11build_gridsPdS_S_S_dddS_S_ddd
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z5errordd
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z5omegadd
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6scalarddd
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_k1
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_particles
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_rad_vector
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_seed
  0.00     15.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_star_x
  0.00     15.84     0.00        1     0.00     0.00  build_grids(double*, double*, double*, double*, double, double, double, double*, double*, double, double, double)
  0.00     15.84     0.00        1     0.00    30.01  calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150])
  0.00     15.84     0.00        1     0.00     0.00  optical_depth_test(double (*) [25][150], double (*) [25][150])

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.06% of 15.84 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.4    0.00   15.59                 solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
                0.02   15.27   17300/17300       RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
                0.02    0.23   34600/2139972     k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
                0.00    0.03       1/1           calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [27]
                0.00    0.03      18/18          add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
                0.00    0.00   17300/19200       dust_mass(double) [38]
                0.00    0.00    3750/3750        theta_reverse(double) [42]
                0.00    0.00    3750/3750        phi_reverse(double) [41]
                0.00    0.00       1/1           build_grids(double*, double*, double*, double*, double, double, double, double*, double*, double, double, double) [53]
                0.00    0.00       1/1           optical_depth_test(double (*) [25][150], double (*) [25][150]) [54]
-----------------------------------------------
                0.02   15.27   17300/17300       solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[2]     96.5    0.02   15.27   17300         RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
                0.06   10.04  697572/702000      error_max(double, std::vector<double, std::allocator<double> >) [6]
                0.02    5.02  697572/697572      next_step(double, std::vector<double, std::allocator<double> >) [8]
                0.02    0.11  697572/697572      new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
                0.00    0.00   17300/17300       void std::vector<double, std::allocator<double> >::_M_realloc_insert<double const&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [39]
-----------------------------------------------
                0.00    0.02    3800/2139972     add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
                0.02    0.23   34600/2139972     solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
                1.15   13.79 2101572/2139972     new_variables(double, std::vector<double, std::allocator<double> >, bool) [4]
[3]     96.0    1.17   14.05 2139972         k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
                2.32   11.30 39934296/39934296     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
                0.07    0.36 13311432/13311432     sublimation(double, double, double, double) [18]
-----------------------------------------------
                0.06    4.96  697572/2101572     next_step(double, std::vector<double, std::allocator<double> >) [8]
                0.12    9.98 1404000/2101572     error_max(double, std::vector<double, std::allocator<double> >) [6]
[4]     95.5    0.18   14.94 2101572         new_variables(double, std::vector<double, std::allocator<double> >, bool) [4]
                1.15   13.79 2101572/2139972     k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
-----------------------------------------------
                2.32   11.30 39934296/39934296     k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
[5]     86.0    2.32   11.30 39934296         acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
                3.08    3.71 39934296/39934296     rad_pressure(std::vector<double, std::allocator<double> >) [7]
                0.89    1.80 39934296/40631868     pr_drag(std::vector<double, std::allocator<double> >) [9]
                0.56    0.63 39934296/39934296     centrifugal(std::vector<double, std::allocator<double> >) [12]
                0.22    0.34 39934296/39934296     coriolis(std::vector<double, std::allocator<double> >) [16]
                0.07    0.00 79868592/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                0.00    0.06    4428/702000      new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
                0.06   10.04  697572/702000      RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
[6]     64.1    0.06   10.10  702000         error_max(double, std::vector<double, std::allocator<double> >) [6]
                0.12    9.98 1404000/2101572     new_variables(double, std::vector<double, std::allocator<double> >, bool) [4]
-----------------------------------------------
                3.08    3.71 39934296/39934296     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
[7]     42.9    3.08    3.71 39934296         rad_pressure(std::vector<double, std::allocator<double> >) [7]
                1.67    0.30 119802888/119802888     sunit_vector(std::vector<double, std::allocator<double> >) [11]
                0.98    0.03 39934296/79868592     opacity(double, double, double, double) [10]
                0.58    0.00 119802888/119802888     dot_product(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >) [15]
                0.08    0.00 39934296/79868592     beta_fn(double, double, double) [21]
                0.04    0.00 39934296/93180024     luminosity(double) [24]
                0.03    0.00 39934296/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                0.02    5.02  697572/697572      RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
[8]     31.8    0.02    5.02  697572         next_step(double, std::vector<double, std::allocator<double> >) [8]
                0.06    4.96  697572/2101572     new_variables(double, std::vector<double, std::allocator<double> >, bool) [4]
-----------------------------------------------
                0.02    0.03  697572/40631868     new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
                0.89    1.80 39934296/40631868     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
[9]     17.3    0.91    1.83 40631868         pr_drag(std::vector<double, std::allocator<double> >) [9]
                0.98    0.03 39934296/79868592     opacity(double, double, double, double) [10]
                0.37    0.29 39934296/39934296     drag_vel(std::vector<double, std::allocator<double> >) [14]
                0.08    0.00 39934296/79868592     beta_fn(double, double, double) [21]
                0.04    0.00 39934296/93180024     luminosity(double) [24]
                0.03    0.00 39934296/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                0.98    0.03 39934296/79868592     rad_pressure(std::vector<double, std::allocator<double> >) [7]
                0.98    0.03 39934296/79868592     pr_drag(std::vector<double, std::allocator<double> >) [9]
[10]    12.7    1.95    0.07 79868592         opacity(double, double, double, double) [10]
                0.07    0.00 79868592/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                1.67    0.30 119802888/119802888     rad_pressure(std::vector<double, std::allocator<double> >) [7]
[11]    12.4    1.67    0.30 119802888         sunit_vector(std::vector<double, std::allocator<double> >) [11]
                0.30    0.00 359408664/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                0.56    0.63 39934296/39934296     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
[12]     7.5    0.56    0.63 39934296         centrifugal(std::vector<double, std::allocator<double> >) [12]
                0.59    0.00 79868592/159737184     cross_product(double, double, double, double, double, double) [13]
                0.05    0.00 39934296/79868592     omega(double, double) [25]
-----------------------------------------------
                0.29    0.00 39934296/159737184     coriolis(std::vector<double, std::allocator<double> >) [16]
                0.29    0.00 39934296/159737184     drag_vel(std::vector<double, std::allocator<double> >) [14]
                0.59    0.00 79868592/159737184     centrifugal(std::vector<double, std::allocator<double> >) [12]
[13]     7.4    1.17    0.00 159737184         cross_product(double, double, double, double, double, double) [13]
-----------------------------------------------
                0.37    0.29 39934296/39934296     pr_drag(std::vector<double, std::allocator<double> >) [9]
[14]     4.2    0.37    0.29 39934296         drag_vel(std::vector<double, std::allocator<double> >) [14]
                0.29    0.00 39934296/159737184     cross_product(double, double, double, double, double, double) [13]
-----------------------------------------------
                0.58    0.00 119802888/119802888     rad_pressure(std::vector<double, std::allocator<double> >) [7]
[15]     3.7    0.58    0.00 119802888         dot_product(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >) [15]
-----------------------------------------------
                0.22    0.34 39934296/39934296     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
[16]     3.5    0.22    0.34 39934296         coriolis(std::vector<double, std::allocator<double> >) [16]
                0.29    0.00 39934296/159737184     cross_product(double, double, double, double, double, double) [13]
                0.05    0.00 39934296/79868592     omega(double, double) [25]
-----------------------------------------------
                0.01    0.00 13311432/625637304     clausius_clap(double, double, double, double) [19]
                0.01    0.00 13311432/625637304     temp_dust(double, double, double, double, double) [23]
                0.03    0.00 39934296/625637304     rad_pressure(std::vector<double, std::allocator<double> >) [7]
                0.03    0.00 39934296/625637304     pr_drag(std::vector<double, std::allocator<double> >) [9]
                0.07    0.00 79868592/625637304     acceleration(int, double, double, std::vector<double, std::allocator<double> >) [5]
                0.07    0.00 79868592/625637304     opacity(double, double, double, double) [10]
                0.30    0.00 359408664/625637304     sunit_vector(std::vector<double, std::allocator<double> >) [11]
[17]     3.3    0.52    0.00 625637304         scalar(double, double, double) [17]
-----------------------------------------------
                0.07    0.36 13311432/13311432     k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
[18]     2.7    0.07    0.36 13311432         sublimation(double, double, double, double) [18]
                0.22    0.01 13311432/13311432     clausius_clap(double, double, double, double) [19]
                0.10    0.01 13311432/13311432     temp_dust(double, double, double, double, double) [23]
                0.01    0.00 13311432/93180024     luminosity(double) [24]
-----------------------------------------------
                0.22    0.01 13311432/13311432     sublimation(double, double, double, double) [18]
[19]     1.5    0.22    0.01 13311432         clausius_clap(double, double, double, double) [19]
                0.01    0.00 13311432/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                                                 <spontaneous>
[20]     1.1    0.18    0.00                 std::vector<Particle, std::allocator<Particle> >::~vector() [20]
-----------------------------------------------
                0.08    0.00 39934296/79868592     rad_pressure(std::vector<double, std::allocator<double> >) [7]
                0.08    0.00 39934296/79868592     pr_drag(std::vector<double, std::allocator<double> >) [9]
[21]     1.0    0.16    0.00 79868592         beta_fn(double, double, double) [21]
-----------------------------------------------
                                4428             new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
                0.02    0.11  697572/697572      RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
[22]     0.8    0.02    0.11  697572+4428    new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
                0.00    0.06    4428/702000      error_max(double, std::vector<double, std::allocator<double> >) [6]
                0.02    0.03  697572/40631868     pr_drag(std::vector<double, std::allocator<double> >) [9]
                                4428             new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [22]
-----------------------------------------------
                0.10    0.01 13311432/13311432     sublimation(double, double, double, double) [18]
[23]     0.7    0.10    0.01 13311432         temp_dust(double, double, double, double, double) [23]
                0.01    0.00 13311432/625637304     scalar(double, double, double) [17]
-----------------------------------------------
                0.01    0.00 13311432/93180024     sublimation(double, double, double, double) [18]
                0.04    0.00 39934296/93180024     rad_pressure(std::vector<double, std::allocator<double> >) [7]
                0.04    0.00 39934296/93180024     pr_drag(std::vector<double, std::allocator<double> >) [9]
[24]     0.6    0.10    0.00 93180024         luminosity(double) [24]
-----------------------------------------------
                0.05    0.00 39934296/79868592     centrifugal(std::vector<double, std::allocator<double> >) [12]
                0.05    0.00 39934296/79868592     coriolis(std::vector<double, std::allocator<double> >) [16]
[25]     0.6    0.09    0.00 79868592         omega(double, double) [25]
-----------------------------------------------
                                                 <spontaneous>
[26]     0.4    0.07    0.00                 radial_vel(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >) [26]
-----------------------------------------------
                0.00    0.03       1/1           solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[27]     0.2    0.00    0.03       1         calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [27]
                0.02    0.00    1800/1800        to_spherical(double, double, double) [29]
                0.01    0.00    1800/1800        grid_scaling(std::vector<double, std::allocator<double> >) [30]
                0.00    0.00    7839/9652        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [40]
-----------------------------------------------
                0.00    0.03      18/18          solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[28]     0.2    0.00    0.03      18         add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
                0.00    0.02    3800/2139972     k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&) [3]
                0.00    0.00    1900/19200       dust_mass(double) [38]
                0.00    0.00      13/9652        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [40]
                0.00    0.00      12/12          void std::vector<Particle, std::allocator<Particle> >::_M_realloc_insert<Particle const&>(__gnu_cxx::__normal_iterator<Particle*, std::vector<Particle, std::allocator<Particle> > >, Particle const&) [43]
-----------------------------------------------
                0.02    0.00    1800/1800        calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [27]
[29]     0.1    0.02    0.00    1800         to_spherical(double, double, double) [29]
-----------------------------------------------
                0.01    0.00    1800/1800        calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [27]
[30]     0.1    0.01    0.00    1800         grid_scaling(std::vector<double, std::allocator<double> >) [30]
                0.00    0.00    1800/9652        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [40]
-----------------------------------------------
                0.00    0.00    1900/19200       add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
                0.00    0.00   17300/19200       solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[38]     0.0    0.00    0.00   19200         dust_mass(double) [38]
-----------------------------------------------
                0.00    0.00   17300/17300       RK_solver(std::vector<double, std::allocator<double> >, double, double, double) [2]
[39]     0.0    0.00    0.00   17300         void std::vector<double, std::allocator<double> >::_M_realloc_insert<double const&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [39]
-----------------------------------------------
                0.00    0.00      13/9652        add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
                0.00    0.00    1800/9652        grid_scaling(std::vector<double, std::allocator<double> >) [30]
                0.00    0.00    7839/9652        calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [27]
[40]     0.0    0.00    0.00    9652         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [40]
-----------------------------------------------
                0.00    0.00    3750/3750        solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[41]     0.0    0.00    0.00    3750         phi_reverse(double) [41]
-----------------------------------------------
                0.00    0.00    3750/3750        solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[42]     0.0    0.00    0.00    3750         theta_reverse(double) [42]
-----------------------------------------------
                0.00    0.00      12/12          add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [28]
[43]     0.0    0.00    0.00      12         void std::vector<Particle, std::allocator<Particle> >::_M_realloc_insert<Particle const&>(__gnu_cxx::__normal_iterator<Particle*, std::vector<Particle, std::allocator<Particle> > >, Particle const&) [43]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[44]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11build_gridsPdS_S_S_dddS_S_ddd [44]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[45]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z5errordd [45]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[46]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z5omegadd [46]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[47]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6scalarddd [47]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[48]     0.0    0.00    0.00       1         _GLOBAL__sub_I_k1 [48]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[49]     0.0    0.00    0.00       1         _GLOBAL__sub_I_particles [49]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[50]     0.0    0.00    0.00       1         _GLOBAL__sub_I_rad_vector [50]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[51]     0.0    0.00    0.00       1         _GLOBAL__sub_I_seed [51]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [70]
[52]     0.0    0.00    0.00       1         _GLOBAL__sub_I_star_x [52]
-----------------------------------------------
                0.00    0.00       1/1           solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[53]     0.0    0.00    0.00       1         build_grids(double*, double*, double*, double*, double, double, double, double*, double*, double, double, double) [53]
-----------------------------------------------
                0.00    0.00       1/1           solve_particles(double, double, std::vector<Particle, std::allocator<Particle> >&, long, double, double, long) [1]
[54]     0.0    0.00    0.00       1         optical_depth_test(double (*) [25][150], double (*) [25][150]) [54]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [44] _GLOBAL__sub_I__Z11build_gridsPdS_S_S_dddS_S_ddd (ray_tracer.cpp) [5] acceleration(int, double, double, std::vector<double, std::allocator<double> >) [10] opacity(double, double, double, double)
  [45] _GLOBAL__sub_I__Z5errordd (errors_update.cpp) [30] grid_scaling(std::vector<double, std::allocator<double> >) [9] pr_drag(std::vector<double, std::allocator<double> >)
  [46] _GLOBAL__sub_I__Z5omegadd (microphysics.cpp) [7] rad_pressure(std::vector<double, std::allocator<double> >) [16] coriolis(std::vector<double, std::allocator<double> >)
  [47] _GLOBAL__sub_I__Z6scalarddd (maths.cpp) [11] sunit_vector(std::vector<double, std::allocator<double> >) [14] drag_vel(std::vector<double, std::allocator<double> >)
  [48] _GLOBAL__sub_I_k1 (kvalues.cpp) [29] to_spherical(double, double, double) [3] k_values(double, std::vector<double, std::allocator<double> >, bool, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&)
  [49] _GLOBAL__sub_I_particles (RK_init_update.cpp) [28] add_particles(std::vector<Particle, std::allocator<Particle> >&, long, long, double) [2] RK_solver(std::vector<double, std::allocator<double> >, double, double, double)
  [50] _GLOBAL__sub_I_rad_vector (forces.cpp) [19] clausius_clap(double, double, double, double) [38] dust_mass(double)
  [51] _GLOBAL__sub_I_seed (add_rm.cpp) [13] cross_product(double, double, double, double, double, double) [6] error_max(double, std::vector<double, std::allocator<double> >)
  [52] _GLOBAL__sub_I_star_x (solver_new_err.cpp) [22] new_step_size(double, double, int, std::vector<double, std::allocator<double> >) [8] next_step(double, std::vector<double, std::allocator<double> >)
  [24] luminosity(double)      [4] new_variables(double, std::vector<double, std::allocator<double> >, bool) [23] temp_dust(double, double, double, double, double)
  [26] radial_vel(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >) [42] theta_reverse(double) [40] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  [53] build_grids(double*, double*, double*, double*, double, double, double, double*, double*, double, double, double) [27] calculation_ext(std::vector<Particle, std::allocator<Particle> >&, double (*) [25][150], int (*) [25][150]) [43] void std::vector<Particle, std::allocator<Particle> >::_M_realloc_insert<Particle const&>(__gnu_cxx::__normal_iterator<Particle*, std::vector<Particle, std::allocator<Particle> > >, Particle const&)
  [12] centrifugal(std::vector<double, std::allocator<double> >) [54] optical_depth_test(double (*) [25][150], double (*) [25][150]) [20] std::vector<Particle, std::allocator<Particle> >::~vector()
  [15] dot_product(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >) [25] omega(double, double) [39] void std::vector<double, std::allocator<double> >::_M_realloc_insert<double const&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)
  [41] phi_reverse(double)    [17] scalar(double, double, double)
  [18] sublimation(double, double, double, double) [21] beta_fn(double, double, double)
